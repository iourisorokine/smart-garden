{"version":3,"sources":["modules/Vegetables/types.ts","ui/Content.tsx","modules/Vegetables/VegListItem.tsx","modules/Vegetables/AddNewVegButton.tsx","modules/Vegetables/KeyDateDisplay.tsx","modules/Vegetables/VegDetails.tsx","modules/Vegetables/AddNewVegetable/AddKeyDateForm.tsx","modules/Vegetables/AddNewVegetable/AddNewVegForm.tsx","modules/Vegetables/index.tsx","modules/Garden/index.tsx","modules/Home/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["EventName","Content","styled","div","props","padding","paddingTop","paddingBottom","paddingLeft","paddingRight","flexDirection","alignItems","justifyContent","VegListItem","Button","vegName","vegEmoji","selectCurrentVeg","variant","onClick","style","margin","textAlign","textTransform","AddNewVegButton","createNewVegHandler","eventNameTranslation","PLANT","SEED","CLEAR","PRUNE","HARVEST","indexToMonth","0","1","2","3","4","5","6","7","8","9","10","11","KeyDateDisplay","date","deleteKeyDate","keyDateStyle","display","eventName","fontSize","earliest","latest","monthsArray","Object","values","getMonthsIntervalDescription","description","calculationMethod","event","toEvent","differenceInDays","getDifferenceToDateDescription","height","minWidth","border","borderRadius","VegDetails","selectedVeg","setSelectedVeg","deleteVeg","a","id","_id","axios","delete","emoji","name","size","maxWidth","spacing","betweenPlantsM","betweenLinesM","necessarySpaceSqm","wateringFrequencyDays","harvest","minKilos","maxKilos","keyDates","map","item","AddKeyDateForm","addKeyDate","setIsAddKeyDateView","useState","newKeyDateEventType","setNewKeyDateEventType","newEventDescription","setNewEventDescription","earliestDateMonth","setEarliestDateMonth","latestDateMonth","setLatestDateMonth","numberDaysLater","setNumberDaysLater","referenceEventForKeyDate","setReferenceEventForKeyDate","alreadyCreatedEvents","length","FormControl","InputLabel","htmlFor","Select","onChange","e","target","value","Input","aria-describedby","type","Number","month","index","AddNewVegForm","setIsCreateVegView","setVegName","vegDescription","setVegDescription","setVegEmoji","spacingBetweenPlants","setSpacingBetweenPlants","spacingBetweenLines","setSpacingBetweenLines","necessarySpacePerPlant","setNecessarySpacePerPlant","minHarvest","setMinHarvest","maxHarvest","setMaxHarvest","wateringFrequency","setWateringFrequency","setKeyDates","isAddKeyDateView","useEffect","calculatedSpacePerPlant","toFixed","createVegDoc","post","necessarySpaceSqM","AddKeyDateButton","width","newKeyDate","undefined","updatedKeyDates","concat","newDates","splice","vegListStyle","Vegetables","isCreateVegView","vegetablesToDisplay","setVegetablesToDisplay","get","data","console","log","loadVeges","createNewVeg","vegetablesList","parcelStyle","Garden","parcelsToDisplay","setParcelsToDisplay","loadParcels","allParcels","addParcel","flexWrap","wrapperStyle","headerStyle","views","Home","view","setView","flex","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30eae580.chunk.js","sourcesContent":["export enum EventName {\n  PLANT = \"PLANT\",\n  SEED = \"SEED\",\n  CLEAR = \"CLEAR\",\n  PRUNE = \"PRUNE\",\n  HARVEST = \"HARVEST\",\n}\n\nexport const eventNameTranslation = {\n  [EventName.PLANT]: \"Plantage des graines\",\n  [EventName.SEED]: \"Semis en pleine terre\",\n  [EventName.CLEAR]: \"Eclaircissement\",\n  [EventName.PRUNE]: \"Elaguage\",\n  [EventName.HARVEST]: \"Recolte\",\n};\n\nexport const indexToMonth = {\n  0: \"Janvier\",\n  1: \"Fevrier\",\n  2: \"Mars\",\n  3: \"Avril\",\n  4: \"Mai\",\n  5: \"Juin\",\n  6: \"Juillet\",\n  7: \"Aout\",\n  8: \"Septembre\",\n  9: \"Octobre\",\n  10: \"Novembre\",\n  11: \"Decembre\",\n};\n\nexport interface KeyDate {\n  eventName: EventName;\n  description: string;\n  earliest: number;\n  latest: number;\n  calculationMethod?: {\n    differenceInDays: number;\n    toEvent: EventName;\n  };\n}\n\nexport const exampleKeyDate = {\n  eventName: EventName.PLANT,\n  description:\n    \"Planter les graines dans un pot et laisser germer par 25 degres\",\n  earliest: 3,\n  latest: 3,\n};\n\nexport const exampleKeyDate2 = {\n  eventName: EventName.SEED,\n  description: \"Mettre en terre\",\n  earliest: 4,\n  latest: 4,\n  calculationMethod: {\n    differenceInDays: 30,\n    toEvent: EventName.PLANT,\n  },\n};\n","import styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\n\nexport interface ContentProps {\n  padding?: number;\n  paddingTop?: number;\n  paddingBottom?: number;\n  paddingLeft?: number;\n  paddingRight?: number;\n  flexDirection?: \"row\" | \"column\";\n  alignItems?: \"center\" | \"flex-start\" | \"flex-end\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\" | \"space-evenly\";\n}\n\nexport const Content = styled.div`\n  padding: ${(props: ContentProps) => props.padding ?? 0};\n  padding-top: ${(props: ContentProps) =>\n    props.paddingTop ?? props.padding ?? 0};\n  padding-bottom: ${(props: ContentProps) =>\n    props.paddingBottom ?? props.padding ?? 0};\n  padding-left: ${(props: ContentProps) =>\n    props.paddingLeft ?? props.padding ?? 0};\n  padding-right: ${(props: ContentProps) =>\n    props.paddingRight ?? props.padding ?? 0};\n  display: flex;\n  flex: 1;\n  width: calc(100%-padding-border);\n  flex-direction: ${(props: ContentProps) => props.flexDirection ?? \"column\"};\n  align-items: ${(props: ContentProps) => props.alignItems ?? \"flex-start\"};\n  justify-content: ${(props: ContentProps) => props.justifyContent ?? \"center\"};\n`;\n\nexport const VegListItem = styled(Button)`\n  min-height: 60px;\n  min-width: 80px;\n  margin: 10px;\n  padding: 10px;\n  border-color: #7a7;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport { VegListItem as VegListItemStyledComponent } from \"../../ui\";\n\ninterface VegListItemProps {\n  vegName: string;\n  vegEmoji?: string;\n  selectCurrentVeg: () => void;\n}\n\nexport const VegListItem: React.FC<VegListItemProps> = ({\n  vegName,\n  vegEmoji,\n  selectCurrentVeg,\n}) => {\n  return (\n    <VegListItemStyledComponent\n      variant=\"outlined\"\n      onClick={selectCurrentVeg}>\n      <div>\n        {<h1 style={{ padding: 0, margin: 0 }}>{vegEmoji || \"🍅\"}</h1>}{\" \"}\n        {!!vegName && (\n          <p\n            style={{\n              padding: 0,\n              margin: 0,\n              textAlign: \"center\",\n              textTransform: \"none\",\n            }}>\n            {vegName}\n          </p>\n        )}\n      </div>\n    </VegListItemStyledComponent>\n  );\n};\n","import React from \"react\";\nimport { VegListItem as VegListItemStyledComponent } from \"../../ui\";\n\n\ninterface AddNewVegButtonProps {\n  createNewVegHandler: () => void;\n}\n\nexport const AddNewVegButton: React.FC<AddNewVegButtonProps> = ({\n  createNewVegHandler,\n}) => {\n  const onClickHandler = () => {\n    createNewVegHandler();\n  };\n  return (\n    <VegListItemStyledComponent variant=\"outlined\" onClick={onClickHandler}>\n      <h4 style={{ textTransform: \"none\" }}>+ Ajouter</h4>\n    </VegListItemStyledComponent>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { eventNameTranslation, indexToMonth, KeyDate } from \"./types\";\n\nexport interface KeyDateDisplayProps {\n  date: KeyDate;\n  deleteKeyDate?: () => void;\n}\n\nexport const KeyDateDisplay: React.FC<KeyDateDisplayProps> = ({\n  date,\n  deleteKeyDate,\n}) => {\n  const getMonthsIntervalDescription = (earliest: number, latest: number) => {\n    const monthsArray = Object.values(indexToMonth);\n    if (earliest === latest) {\n      return `en ${monthsArray[earliest]}`;\n    } else if (earliest < latest) {\n      return `Entre ${monthsArray[earliest]} et ${monthsArray[latest]}`;\n    }\n    return \"periode inconnue\";\n  };\n\n  const getDifferenceToDateDescription = () => {\n    if (date?.calculationMethod) {\n      const event = eventNameTranslation[date.calculationMethod.toEvent];\n      return `${date.calculationMethod.differenceInDays} jours apres le/la ${event}`;\n    }\n  };\n\n  return (\n    <div style={keyDateStyle}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <div>\n          <div>{eventNameTranslation[date.eventName]}</div>\n          <div\n            style={{\n              fontSize: 12,\n            }}>\n            {getMonthsIntervalDescription(date.earliest, date.latest)}\n          </div>\n          <div\n            style={{\n              fontSize: 12,\n            }}>\n            {date.description}\n          </div>\n\n          <div\n            style={{\n              fontSize: 12,\n            }}>\n            {date.calculationMethod ? getDifferenceToDateDescription() : null}\n          </div>\n        </div>\n        {!!deleteKeyDate && (\n          <Button style={{ height: 32, minWidth: 32 }} onClick={deleteKeyDate}>\n            x\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst keyDateStyle = {\n  margin: \"6px 0 6px 0\",\n  padding: 12,\n  border: \"solid 1px #666\",\n  borderRadius: 4,\n};\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\nimport { KeyDateDisplay } from \"./KeyDateDisplay\";\n\nexport interface VegDetailProps {\n  selectedVeg: any;\n  setSelectedVeg: Dispatch<SetStateAction<string | null>>;\n}\n\nexport const VegDetails: React.FC<VegDetailProps> = ({\n  selectedVeg,\n  setSelectedVeg,\n}) => {\n  const deleteVeg = async () => {\n    const id = selectedVeg._id;\n    if (id) {\n      await axios.delete(`api/vegetable/${id}`);\n    }\n    setSelectedVeg(null);\n  };\n  return (\n    <div style={{ paddingLeft: 24, paddingRight: 24 }}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: 24,\n        }}>\n        <h1>{selectedVeg.emoji}</h1>\n        <h3>Fiche {selectedVeg.name} detaillee</h3>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={() => setSelectedVeg(null)}\n          style={{ margin: 12, padding: 4 }}>\n          x\n        </Button>\n      </div>\n      <div style={{ maxWidth: 500, margin: \"auto\" }}>\n        <p>{selectedVeg.description}</p>\n        {!!selectedVeg.spacing.betweenPlantsM && (\n          <p>{`Espace entre les plants: ${selectedVeg.spacing.betweenPlantsM} m`}</p>\n        )}\n        {!!selectedVeg.spacing.betweenLinesM && (\n          <p>{`Espace entre les lignes: ${selectedVeg.spacing.betweenLinesM} m`}</p>\n        )}\n        {!!selectedVeg.spacing.necessarySpaceSqm && (\n          <p>{`Espace total par plant necessaire: ${selectedVeg.spacing.necessarySpaceSqm} m2`}</p>\n        )}\n        {!!selectedVeg.wateringFrequencyDays && (\n          <p>{`Frequence d'arrosage: tous les ${selectedVeg.wateringFrequencyDays} jours`}</p>\n        )}\n        {!!selectedVeg.harvest.minKilos && (\n          <p>{`Chaque plant fournit une recolte entre ${selectedVeg.harvest.minKilos} et ${selectedVeg.harvest.maxKilos} KG`}</p>\n        )}\n      </div>\n      <div style={{ maxWidth: 500, margin: \"auto\" }}>\n        <h4>Dates clé:</h4>\n        {(selectedVeg.keyDates as []).map((item) => (\n          <KeyDateDisplay date={item} />\n        ))}\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Button onClick={deleteVeg}>supprimer</Button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, SetStateAction, Dispatch } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Select,\n} from \"@material-ui/core\";\nimport {\n  EventName,\n  eventNameTranslation,\n  indexToMonth,\n  KeyDate,\n} from \"../types\";\nimport { AddKeyDateArgs } from \"./AddNewVegForm\";\n\nexport interface AddKeyDateFormProps {\n  keyDates: KeyDate[];\n  addKeyDate: (args: AddKeyDateArgs) => void;\n  setIsAddKeyDateView: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const AddKeyDateForm: React.FC<AddKeyDateFormProps> = ({\n  keyDates,\n  addKeyDate,\n  setIsAddKeyDateView,\n}) => {\n  const [newKeyDateEventType, setNewKeyDateEventType] = useState<EventName>(\n    EventName.SEED\n  );\n  const [newEventDescription, setNewEventDescription] = useState<string>(\"\");\n  const [earliestDateMonth, setEarliestDateMonth] = useState(0);\n  const [latestDateMonth, setLatestDateMonth] = useState(0);\n  const [numberDaysLater, setNumberDaysLater] = useState(0);\n  const [referenceEventForKeyDate, setReferenceEventForKeyDate] = useState<\n    EventName\n  >(EventName.PLANT);\n\n  const handleOnAddKeyDateClick = () => {\n    addKeyDate({\n      newKeyDateEventType,\n      newEventDescription,\n      earliestDateMonth,\n      latestDateMonth,\n      numberDaysLater,\n      referenceEventForKeyDate,\n    });\n  };\n\n  const alreadyCreatedEvents = keyDates.length\n    ? keyDates.map((date) => date.eventName)\n    : [];\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: 12,\n        border: \"1px #777 solid\",\n        borderRadius: 4,\n      }}>\n      <h4>Nouvelle date clé:</h4>\n      <FormControl>\n        <InputLabel id=\"helper11\" htmlFor=\"my-input11\">\n          Type:\n        </InputLabel>\n        <Select\n          onChange={(e) =>\n            setNewKeyDateEventType(e.target.value as SetStateAction<EventName>)\n          }\n          value={newKeyDateEventType}>\n          {[\n            EventName.SEED,\n            EventName.PLANT,\n            EventName.PRUNE,\n            EventName.CLEAR,\n            EventName.HARVEST,\n          ].map((eventName) => {\n            return (\n              <option value={eventName} key={eventName}>\n                {eventNameTranslation[eventName]}\n              </option>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"my-input12\">Description:</InputLabel>\n        <Input\n          id=\"my-input12\"\n          aria-describedby=\"my-helper-text12\"\n          type=\"text\"\n          value={newEventDescription}\n          onChange={(e) => setNewEventDescription(e.target.value)}\n        />\n      </FormControl>\n      <FormControl>\n        <InputLabel id=\"helper13\" htmlFor=\"my-input13\">\n          Au plus tôt en:\n        </InputLabel>\n        <Select\n          onChange={(e) => setEarliestDateMonth(Number(e.target.value))}\n          value={earliestDateMonth}>\n          {Object.values(indexToMonth).map((month, index) => {\n            return (\n              <option key={index} value={index}>\n                {month}\n              </option>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <FormControl>\n        <InputLabel id=\"helper14\" htmlFor=\"my-input14\">\n          Au plus tard en:\n        </InputLabel>\n        <Select\n          onChange={(e) => setLatestDateMonth(Number(e.target.value))}\n          value={latestDateMonth}>\n          {Object.values(indexToMonth).map((month, index) => {\n            return (\n              <option key={index} value={index}>\n                {month}\n              </option>\n            );\n          })}\n        </Select>\n      </FormControl>\n      {!!keyDates.length && (\n        <FormControl>\n          <InputLabel htmlFor=\"my-input15\">\n            {\"(Optionnel) nombre de jours apres un autre évennement\"}\n          </InputLabel>\n          <Input\n            id=\"my-input15\"\n            aria-describedby=\"my-helper-text15\"\n            type=\"number\"\n            value={numberDaysLater}\n            onChange={(e) => setNumberDaysLater(Number(e.target.value))}\n          />\n        </FormControl>\n      )}\n\n      {!!numberDaysLater && (\n        <FormControl>\n          <InputLabel id=\"helper16\" htmlFor=\"my-input16\">\n            jours apres l'évennement suivant:\n          </InputLabel>\n          <Select\n            onChange={(e) =>\n              setReferenceEventForKeyDate(\n                (e.target.value as unknown) as EventName\n              )\n            }\n            value={referenceEventForKeyDate}>\n            {alreadyCreatedEvents.map((eventName, index) => {\n              return (\n                <option key={index} value={eventName}>\n                  {eventNameTranslation[eventName]}\n                </option>\n              );\n            })}\n          </Select>\n        </FormControl>\n      )}\n      <div style={{ display: \"flex\", justifyContent: \"center\", padding: 12 }}>\n        <div style={{ padding: 12 }}>\n          <Button variant=\"outlined\" onClick={handleOnAddKeyDateClick}>\n            Ajouter\n          </Button>\n        </div>\n        <div style={{ padding: 12 }}>\n          <Button variant=\"outlined\" onClick={() => setIsAddKeyDateView(false)}>\n            Annuler\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Content } from \"../../../ui\";\nimport axios from \"axios\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Select,\n} from \"@material-ui/core\";\nimport { EventName, KeyDate } from \"../types\";\nimport { KeyDateDisplay } from \"../KeyDateDisplay\";\nimport { AddKeyDateForm } from \"./AddKeyDateForm\";\n\nexport interface AddKeyDateArgs {\n  newKeyDateEventType: EventName;\n  newEventDescription: string;\n  earliestDateMonth: number;\n  latestDateMonth: number;\n  numberDaysLater?: number;\n  referenceEventForKeyDate: EventName;\n}\n\nexport interface AddNewVegFormProps {\n  setIsCreateVegView: (v: React.SetStateAction<boolean>) => void;\n}\n\nexport const AddNewVegForm: React.FC<AddNewVegFormProps> = ({\n  setIsCreateVegView,\n}) => {\n  const [vegName, setVegName] = useState<string>(\"\");\n  const [vegDescription, setVegDescription] = useState<string>(\"\");\n  const [vegEmoji, setVegEmoji] = useState<string>(\"\");\n  const [spacingBetweenPlants, setSpacingBetweenPlants] = useState(\"0\");\n  const [spacingBetweenLines, setSpacingBetweenLines] = useState(\"0\");\n  const [necessarySpacePerPlant, setNecessarySpacePerPlant] = useState(\"0\");\n  const [minHarvest, setMinHarvest] = useState(\"0\");\n  const [maxHarvest, setMaxHarvest] = useState(\"0\");\n  const [wateringFrequency, setWateringFrequency] = useState(\"0\");\n  const [keyDates, setKeyDates] = useState<KeyDate[]>([]);\n  const [isAddKeyDateView, setIsAddKeyDateView] = useState<boolean>(false);\n\n  useEffect(() => {\n    const calculatedSpacePerPlant = (\n      Number(spacingBetweenPlants) * Number(spacingBetweenLines)\n    ).toFixed(2);\n    setNecessarySpacePerPlant(calculatedSpacePerPlant);\n  }, [spacingBetweenPlants, spacingBetweenLines]);\n\n  const handleSpacingBetweenLines = (e: any) => {\n    if (e) {\n      setSpacingBetweenLines(e.target.value);\n    }\n  };\n\n  const handleSpacingBetweenPlants = (e: any) => {\n    if (e) {\n      setSpacingBetweenPlants(e.target.value);\n    }\n  };\n\n  const addKeyDate = ({\n    newKeyDateEventType,\n    newEventDescription,\n    earliestDateMonth,\n    latestDateMonth,\n    numberDaysLater,\n    referenceEventForKeyDate,\n  }: AddKeyDateArgs) => {\n    const calculationMethod = !!numberDaysLater\n      ? {\n          differenceInDays: numberDaysLater,\n          toEvent: referenceEventForKeyDate,\n        }\n      : undefined;\n    const newKeyDate = {\n      eventName: newKeyDateEventType,\n      description: newEventDescription,\n      earliest: earliestDateMonth,\n      latest: latestDateMonth,\n      calculationMethod,\n    };\n    const updatedKeyDates = keyDates.concat([newKeyDate]);\n    setKeyDates(updatedKeyDates);\n    setIsAddKeyDateView(false);\n    return;\n  };\n\n  const deleteKeyDate = (index: number) => {\n    const newDates = keyDates;\n    newDates.splice(index, 1);\n    setKeyDates([...newDates]);\n  };\n\n  const createVegDoc = async () => {\n    await axios.post(\"api/vegetable\", {\n      name: vegName,\n      description: vegDescription,\n      emoji: vegEmoji,\n      spacing: {\n        betweenPlantsM: Number(spacingBetweenPlants),\n        betweenLinesM: Number(spacingBetweenLines),\n        necessarySpaceSqM: Number(necessarySpacePerPlant),\n      },\n      harvest: {\n        minKilos: Number(minHarvest),\n        maxKilos: Number(maxHarvest),\n      },\n      wateringFrequencyDays: Number(wateringFrequency),\n      keyDates,\n    });\n    setIsCreateVegView(false);\n  };\n\n  const AddKeyDateButton: React.FC = () => (\n    <Button variant=\"outlined\" onClick={() => setIsAddKeyDateView(true)}>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div>{\"+ Ajouter une date clé\"}</div>\n      </div>\n    </Button>\n  );\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          padding: 24,\n        }}>\n        <h3>Créer une fiche Legume</h3>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setIsCreateVegView(false)}\n          style={{ margin: 12 }}>\n          x\n        </Button>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: 500,\n          margin: \"auto\",\n        }}>\n        <FormControl>\n          <InputLabel htmlFor=\"my-input\">Denomination du legume</InputLabel>\n          <Input\n            id=\"my-input\"\n            aria-describedby=\"my-helper-text\"\n            value={vegName}\n            onChange={(e) => setVegName(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <InputLabel id=\"helper2\" htmlFor=\"my-input2\">\n            Emoji\n          </InputLabel>\n          <Select\n            value={vegEmoji}\n            onChange={(e) =>\n              setVegEmoji((e.target.value as unknown) as string)\n            }>\n            {[\n              \"\",\n              \"🌶\",\n              \"🌽\",\n              \"🍅\",\n              \"🥕\",\n              \"🍆\",\n              \"🥬\",\n              \"🧅\",\n              \"🥦\",\n              \"🍇\",\n              \"🥔\",\n              \"🥒\",\n              \"🧄\",\n              \" 🍉\",\n              \"🍈\",\n            ].map((emoji) => {\n              return <option value={emoji}>{emoji}</option>;\n            })}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor=\"my-input111\">Description du legume</InputLabel>\n          <Input\n            id=\"my-input111\"\n            aria-describedby=\"my-helper-text111\"\n            value={vegDescription}\n            onChange={(e) => setVegDescription(e.target.value)}\n          />\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor=\"my-input3\">\n            Espace entre les plants (m)\n          </InputLabel>\n          <Input\n            id=\"my-input3\"\n            aria-describedby=\"my-helper-text3\"\n            type=\"number\"\n            value={spacingBetweenPlants}\n            onChange={handleSpacingBetweenPlants}\n          />\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor=\"my-input4\">\n            Espace entre les lignes (m)\n          </InputLabel>\n          <Input\n            id=\"my-input4\"\n            aria-describedby=\"my-helper-text4\"\n            type=\"number\"\n            value={spacingBetweenLines}\n            onChange={handleSpacingBetweenLines}\n          />\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor=\"my-input5\">\n            Espace par plant necessaire (m2)\n          </InputLabel>\n          <Input\n            id=\"my-input5\"\n            aria-describedby=\"my-helper-text5\"\n            type=\"number\"\n            value={necessarySpacePerPlant}\n            onChange={(e) => setNecessarySpacePerPlant(e.target.value)}\n          />\n        </FormControl>\n        <Content flexDirection=\"row\">\n          <h4>Recolte par plant (kg)</h4>\n          <div style={{ paddingLeft: 16, paddingRight: 16 }}>\n            <FormControl>\n              <InputLabel htmlFor=\"my-input8\">Min</InputLabel>\n              <Input\n                id=\"my-input8\"\n                aria-describedby=\"my-helper-text8\"\n                type=\"number\"\n                value={minHarvest}\n                onChange={(e) => setMinHarvest(e.target.value)}\n              />\n            </FormControl>\n          </div>\n          <FormControl>\n            <InputLabel htmlFor=\"my-input9\">Max</InputLabel>\n            <Input\n              id=\"my-input9\"\n              aria-describedby=\"my-helper-text9\"\n              type=\"number\"\n              value={maxHarvest}\n              onChange={(e) => setMaxHarvest(e.target.value)}\n            />\n          </FormControl>\n        </Content>\n        <FormControl>\n          <InputLabel htmlFor=\"my-input10\">\n            Arroser tous les ... jours\n          </InputLabel>\n          <Input\n            id=\"my-input10\"\n            aria-describedby=\"my-helper-text10\"\n            type=\"number\"\n            value={wateringFrequency}\n            onChange={(e) => setWateringFrequency(e.target.value)}\n          />\n        </FormControl>\n        <h4>Dates clé:</h4>\n        {isAddKeyDateView ? (\n          <AddKeyDateForm\n            keyDates={keyDates}\n            addKeyDate={addKeyDate}\n            setIsAddKeyDateView={setIsAddKeyDateView}\n          />\n        ) : (\n          <AddKeyDateButton />\n        )}\n        {keyDates.map((date, index) => (\n          <KeyDateDisplay\n            key={index}\n            date={date}\n            deleteKeyDate={() => deleteKeyDate(index)}\n          />\n        ))}\n        <div style={{ padding: 24, margin: \"auto\" }}>\n          <Button onClick={createVegDoc} variant=\"contained\">\n            Creer\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { VegListItem } from \"./VegListItem\";\nimport { AddNewVegButton } from \"./AddNewVegButton\";\nimport { VegDetails } from \"./VegDetails\";\nimport { AddNewVegForm } from \"./AddNewVegetable/AddNewVegForm\";\n\nconst vegListStyle = {\n  padding: 20,\n  display: \"flex\",\n};\n\nexport const Vegetables: React.FC = () => {\n  const [selectedVeg, setSelectedVeg] = useState<any>(null);\n  const [isCreateVegView, setIsCreateVegView] = useState<boolean>(false);\n  const [vegetablesToDisplay, setVegetablesToDisplay] = useState<any[]>([\"\"]);\n\n  useEffect(() => {\n    const loadVeges = async () => {\n      try {\n        const { data } = await axios.get(\"/api/vegetable\");\n        if (data) {\n          setVegetablesToDisplay([\"\", ...data]);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    loadVeges();\n  }, [isCreateVegView, selectedVeg]);\n\n  const createNewVeg = () => setIsCreateVegView(true);\n  const vegetablesList = vegetablesToDisplay.map((item, index) => {\n    const selectCurrentVeg = () => {\n      setSelectedVeg(item);\n    };\n    if (index === 0)\n      return <AddNewVegButton createNewVegHandler={createNewVeg} />;\n    return (\n      <VegListItem\n        vegName={item.name}\n        vegEmoji={item.emoji}\n        selectCurrentVeg={selectCurrentVeg}\n      />\n    );\n  });\n  return (\n    <div>\n      {isCreateVegView ? (\n        <AddNewVegForm setIsCreateVegView={setIsCreateVegView} />\n      ) : !selectedVeg ? (\n        <div style={vegListStyle}>{vegetablesList}</div>\n      ) : (\n        <VegDetails selectedVeg={selectedVeg} setSelectedVeg={setSelectedVeg} />\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\n\nconst emptyParcels = [{}, {}, {}, {}, {}, {}, {}, {}];\n\nconst parcelStyle = {\n  margin: 4,\n  border: \"solid 1px black\",\n  borderRadius: 4,\n  width: 120,\n  height: 120,\n};\n\nexport const Garden: React.FC = () => {\n  const [parcelsToDisplay, setParcelsToDisplay] = useState([]);\n\n  const loadParcels = async () => {\n    const allParcels = await axios.get(\"api/parcel/\");\n    if (allParcels?.data?.length) {\n      setParcelsToDisplay(allParcels.data);\n    }\n  };\n\n  useEffect(() => {\n    loadParcels();\n  }, []);\n\n  const addParcel = async () => {\n    await axios.post(\"api/parcel/\", {});\n    loadParcels();\n  };\n\n  return (\n    <div\n      style={{\n        padding: 24,\n      }}>\n      <h2>Jardin</h2>\n      <p>\n        Page en construction - ça va venir - avec plan des parcelles et contenus\n        de chacune d'elles\n      </p>\n      <div>\n        <Button variant=\"outlined\" onClick={addParcel}>\n          Ajouter Parcelle\n        </Button>\n      </div>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {parcelsToDisplay.map((item, index) => {\n          return <div key={index} style={parcelStyle} />;\n        })}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Vegetables } from \"../Vegetables\";\nimport { Garden } from \"../Garden\";\nimport { Button } from \"@material-ui/core\";\n\nconst wrapperStyle = {\n  maxWidth: 900,\n  margin: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\" as \"column\",\n  border: \"solid 1px #aaa\",\n};\n\nconst headerStyle = {\n  padding: 20,\n};\n\nconst views = {\n  VEGES: \"VEGES\",\n  GARDEN: \"GARDEN\",\n};\n\nexport const Home: React.FC = () => {\n  const [view, setView] = useState(views.VEGES);\n  return (\n    <div style={wrapperStyle}>\n      <div style={headerStyle}>\n        <h1>Bienvenue a Smart Jardin!</h1>\n      </div>\n      <div style={{ display: \"flex\", flex: 1, padding: 10 }}>\n        <div style={{ padding: 10 }}>\n          <Button\n            color={view === views.VEGES ? \"primary\" : \"default\"}\n            variant=\"outlined\"\n            onClick={() => setView(views.VEGES)}>\n            <h3>Legumes</h3>\n          </Button>\n        </div>\n        <div style={{ padding: 10 }}>\n          <Button\n            color={view === views.GARDEN ? \"primary\" : \"default\"}\n            variant=\"outlined\"\n            onClick={() => setView(views.GARDEN)}>\n            <h3>Jardin</h3>\n          </Button>\n        </div>\n      </div>\n      {view === views.VEGES && <Vegetables />}\n      {view === views.GARDEN && <Garden />}\n    </div>\n  );\n};\n","import { Home } from \"./modules/Home\";\n\nconst App = () => {\n  return <Home />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}